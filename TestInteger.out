==11646== Memcheck, a memory error detector
==11646== Copyright (C) 2002-2011, and GNU GPL'd, by Julian Seward et al.
==11646== Using Valgrind-3.7.0 and LibVEX; rerun with -h for copyright info
==11646== Command: ./TestInteger
==11646== 
Running main() from gtest_main.cc
[==========] Running 35 tests from 1 test case.
[----------] Global test environment set-up.
[----------] 35 tests from Integer
[ RUN      ] Integer.shift_left_digits
[       OK ] Integer.shift_left_digits (49 ms)
[ RUN      ] Integer.shift_left_digits2
[       OK ] Integer.shift_left_digits2 (13 ms)
[ RUN      ] Integer.shift_left_digits3
[       OK ] Integer.shift_left_digits3 (8 ms)
[ RUN      ] Integer.shift_left_digits4
[       OK ] Integer.shift_left_digits4 (7 ms)
[ RUN      ] Integer.shift_right_digits
[       OK ] Integer.shift_right_digits (10 ms)
[ RUN      ] Integer.shift_right_digits2
[       OK ] Integer.shift_right_digits2 (8 ms)
[ RUN      ] Integer.shift_right_digits3
[       OK ] Integer.shift_right_digits3 (7 ms)
[ RUN      ] Integer.shift_right_digits4
[       OK ] Integer.shift_right_digits4 (7 ms)
[ RUN      ] Integer.plus_digits
[       OK ] Integer.plus_digits (36 ms)
[ RUN      ] Integer.plus_digits2
[       OK ] Integer.plus_digits2 (9 ms)
[ RUN      ] Integer.plus_digits3
[       OK ] Integer.plus_digits3 (9 ms)
[ RUN      ] Integer.plus_digits4
[       OK ] Integer.plus_digits4 (9 ms)
[ RUN      ] Integer.plus_digits5
[       OK ] Integer.plus_digits5 (9 ms)
[ RUN      ] Integer.plus_digits6
[       OK ] Integer.plus_digits6 (10 ms)
[ RUN      ] Integer.minus_digits
[       OK ] Integer.minus_digits (13 ms)
[ RUN      ] Integer.minus_digits2
[       OK ] Integer.minus_digits2 (9 ms)
[ RUN      ] Integer.minus_digits3
[       OK ] Integer.minus_digits3 (9 ms)
[ RUN      ] Integer.minus_digits4
[       OK ] Integer.minus_digits4 (9 ms)
[ RUN      ] Integer.minus_digits5
[       OK ] Integer.minus_digits5 (9 ms)
[ RUN      ] Integer.minus_digits6
[       OK ] Integer.minus_digits6 (10 ms)
[ RUN      ] Integer.multiplies_digits
[       OK ] Integer.multiplies_digits (12 ms)
[ RUN      ] Integer.multiplies_digits2
[       OK ] Integer.multiplies_digits2 (10 ms)
[ RUN      ] Integer.multiplies_digits3
[       OK ] Integer.multiplies_digits3 (9 ms)
[ RUN      ] Integer.multiplies_digits4
[       OK ] Integer.multiplies_digits4 (9 ms)
[ RUN      ] Integer.multiplies_digits5
[       OK ] Integer.multiplies_digits5 (9 ms)
[ RUN      ] Integer.multiplies_digits6
[       OK ] Integer.multiplies_digits6 (9 ms)
[ RUN      ] Integer.divides_digits
[       OK ] Integer.divides_digits (14 ms)
[ RUN      ] Integer.divides_digits2
[       OK ] Integer.divides_digits2 (9 ms)
[ RUN      ] Integer.divides_digits3
[       OK ] Integer.divides_digits3 (9 ms)
[ RUN      ] Integer.divides_digits4
[       OK ] Integer.divides_digits4 (9 ms)
[ RUN      ] Integer.divides_digits5
[       OK ] Integer.divides_digits5 (9 ms)
[ RUN      ] Integer.divides_digits6
[       OK ] Integer.divides_digits6 (10 ms)
[ RUN      ] Integer.equal_to
[       OK ] Integer.equal_to (9 ms)
[ RUN      ] Integer.equal_to2
[       OK ] Integer.equal_to2 (8 ms)
[ RUN      ] Integer.equal_to3
[       OK ] Integer.equal_to3 (7 ms)
[----------] 35 tests from Integer (412 ms total)

[----------] Global test environment tear-down
[==========] 35 tests from 1 test case ran. (455 ms total)
[  PASSED  ] 35 tests.
==11646== 
==11646== HEAP SUMMARY:
==11646==     in use at exit: 0 bytes in 0 blocks
==11646==   total heap usage: 1,706 allocs, 1,706 frees, 156,226 bytes allocated
==11646== 
==11646== All heap blocks were freed -- no leaks are possible
==11646== 
==11646== For counts of detected and suppressed errors, rerun with: -v
==11646== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 2 from 2)
